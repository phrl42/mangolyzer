# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES += -I../Banana/vendor/GLFW/include -I../Banana/vendor/GLAD/include/glad -I../Banana/vendor/IMGUI -I../Banana/vendor/GLM/glm -I../Banana/vendor/STB -I../Banana/vendor/MINIAUDIO -I../Banana -I../Banana/src -I../Banana/src/generic -I. -Isrc
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../bin/target/Debug/Sandbox
TARGET = $(TARGETDIR)/Sandbox
OBJDIR = ../bin/obj/Debug/Sandbox
DEFINES += -DMACRO_GLFW -DMACRO_OPENGL -DBUILD_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -g
LIBS += ../bin/target/Debug/Banana/libBanana.a ../bin/target/Debug/GLAD/libGLAD.a ../bin/target/Debug/IMGUI/libIMGUI.a ../bin/target/Debug/GLFW/libGLFW.a ../bin/target/Debug/MSDF-ATLAS-GEN/libMSDF-ATLAS-GEN.a ../bin/target/Debug/msdfgen/libmsdfgen.a ../bin/target/Debug/freetype/libfreetype.a
LDDEPS += ../bin/target/Debug/Banana/libBanana.a ../bin/target/Debug/GLAD/libGLAD.a ../bin/target/Debug/IMGUI/libIMGUI.a ../bin/target/Debug/GLFW/libGLFW.a ../bin/target/Debug/MSDF-ATLAS-GEN/libMSDF-ATLAS-GEN.a ../bin/target/Debug/msdfgen/libmsdfgen.a ../bin/target/Debug/freetype/libfreetype.a
ALL_LDFLAGS += $(LDFLAGS)

else ifeq ($(config),release)
TARGETDIR = ../bin/target/Release/Sandbox
TARGET = $(TARGETDIR)/Sandbox
OBJDIR = ../bin/obj/Release/Sandbox
DEFINES += -DMACRO_GLFW -DMACRO_OPENGL -DBUILD_RELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -O2
LIBS += ../bin/target/Release/Banana/libBanana.a ../bin/target/Release/GLAD/libGLAD.a ../bin/target/Release/IMGUI/libIMGUI.a ../bin/target/Release/GLFW/libGLFW.a ../bin/target/Release/MSDF-ATLAS-GEN/libMSDF-ATLAS-GEN.a ../bin/target/Release/msdfgen/libmsdfgen.a ../bin/target/Release/freetype/libfreetype.a
LDDEPS += ../bin/target/Release/Banana/libBanana.a ../bin/target/Release/GLAD/libGLAD.a ../bin/target/Release/IMGUI/libIMGUI.a ../bin/target/Release/GLFW/libGLFW.a ../bin/target/Release/MSDF-ATLAS-GEN/libMSDF-ATLAS-GEN.a ../bin/target/Release/msdfgen/libmsdfgen.a ../bin/target/Release/freetype/libfreetype.a
ALL_LDFLAGS += $(LDFLAGS) -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/EntryScene.o
GENERATED += $(OBJDIR)/Sandbox.o
GENERATED += $(OBJDIR)/TestLayer.o
OBJECTS += $(OBJDIR)/EntryScene.o
OBJECTS += $(OBJDIR)/Sandbox.o
OBJECTS += $(OBJDIR)/TestLayer.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Sandbox
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Sandbox
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/Sandbox.o: src/Sandbox.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/EntryScene.o: src/scene/EntryScene.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TestLayer.o: src/scene/layer/TestLayer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif